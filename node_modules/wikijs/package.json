{
  "name": "wikijs",
  "description": "Wikipedia interface for node",
  "author": {
    "name": "Richard van der Dys"
  },
  "version": "0.0.8",
  "keywords": [
    "wiki",
    "wikipedia",
    "interface"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/rompetoto/wiki/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">=0.6.0"
  },
  "main": "./build/wiki.min.js",
  "dependencies": {
    "request": "latest"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-uglify": "latest",
    "grunt-contrib-clean": "latest",
    "grunt-mocha-test": "latest",
    "grunt-bump": "latest",
    "grunt-exec": "latest",
    "kal": "latest"
  },
  "homepage": "https://github.com/rompetoto/wiki",
  "bugs": "https://github.com/rompetoto/wiki/issues",
  "repository": {
    "type": "git",
    "url": "git://github.com/rompetoto/wiki.git"
  },
  "readme": "# WikiJs\n\nWikiJs is a simple node.js library which serves as an interface to Wikipedia.\n\nThis project started as just a test application in order to learn [Kal](http://rzimmerman.github.io/kal/), but hopefully\nthis can serve as a helpful tool for others!\n\n## Build it yourself\n\nIn order to build, you will need the latest version of Kal globally installed on your machine.\n\nYou can run these commands in order to build and test WikiJs:\n\n```\ngit clone git@github.com:rompetoto/wiki.git\ncd wiki\nnpm install\ngrunt\n```\n\n## Usage\n\n#### Load in library\n\n```\nvar Wiki = require(\"wikijs\");\n```\n\n#### Search Wikipedia for articles\n\n```\n/**\n * @param {string} query - The search query.\n * @param {number} limit - The number of results. (Optional: Default is 10)\n * @param {boolean} suggestion - Allow  Wikipedia to return a suggested article (Optional: Default is true)\n * @param {function} callback - Callback with parameters (error, results, suggestion)\n */\nWiki.search(\"joker comics\", 3, function(err, results){\n    // results = ['Joker (comics)', 'Joker (comic book)', 'DC Comics']\n});\n```\n\n#### Obtain random articles\n\n```\n/**\n * @param {number} pages - The number of random articles. (Optional: Default is 1)\n * @param {function} callback - Callback with parameters (error, results)\n */\nWiki.random(function(err, results){\n\t// results = ['Star Wars']\n});\n```\n\n#### Get page from article title\n\n```\n/** \n * @param {string} title - Article title\n * @param {boolean} autoSuggest - Allow Wikipedia to return a suggested article (Optional: Default is true\n * @param {function} callback - Callback with parameters (error, page)\n */\nWiki.page(\"Batman\", function(err, page){\n\t// page = WikiPage object for 'Batman' article\n});\n```\n\n#### Search for articles by geographical coordinates\n\n```\n/**\n * @param {number} lat - Latitude\n * @param {number} lon - Longitude\n * @param {number} radius - Radial search distance in meters (Optional: Default is 1km)\n * @param {function} callback - Callback with parameters (error, results)\n */\nWiki.geoSearch(36.109,-115.178, function(err, results){\n\t// results = ['Las Vegas']\n});\n```\n\n## Page methods\n\n```\npage.html(function(err, html){\n\t// html of the article\n});\n\npage.content(function(err, content){\n\t// content of the article\n});\n\npage.summary(function(err, summary){\n\t// summary of the article\n});\n\npage.images(function(err, images){\n\t// list of image URL's in the article\n});\n\npage.references(function(err, references){\n\t// list of reference URL's in the article\n});\n\n/**\n * @param {number} limit - Number of results (Optional: Default is max)\n */\t\npage.links(function(err, links){\n\t// list of links in the article\n});\n\n/**\n * @param {number} limit - Number of results (Optional: Default is max)\n */\t\npage.categories(function(err, categories){\n\t// list of categories the article belongs to\n});\n\n/**\n * @param {string} category - Category to check\n */\t\npage.withinCategory(function(err, result){\n\t// result of category check\n});\n\npage.coordinates(function(err, coordinates){\n\t// get the geographical coordinates of the article, if any\n});\n\npage.infobox(function(err, info){\n\t// get a JSON object filled with data from the article's infobox\n});\n\n/**\n * @param {number} limit - Number of results (Optional: Default is max)\n */\t\npage.backlinks(function(err, backlinks){\n\t// list of backlink URL's in the article\n});\n\n```\n",
  "readmeFilename": "README.md",
  "_id": "wikijs@0.0.8",
  "dist": {
    "shasum": "1a24fd4280d2d0871984ef69c47e2d0f18288e9d"
  },
  "_from": "wikijs@",
  "_resolved": "https://registry.npmjs.org/wikijs/-/wikijs-0.0.8.tgz"
}
